#version 430

layout (local_size_x = 1, local_size_y = 1,local_size_z = 1) in;

//速度データ
layout(rgba32f, binding = 0) restrict uniform image3D out_data;
layout(rgba32f, binding = 1) restrict uniform image3D add_data;
layout(rgba32f, binding = 2) restrict uniform image3D dens;

//uniform変数
uniform float diff;		//拡散係数
uniform float visc;		//粘性係数
uniform int resolution;	//解像度
uniform float dt;		//Δt
uniform int pressureflag;
uniform int b;

void main() {
	//質点の番号に対応するテクスチャ座標を算出
	ivec3 grid_ID = ivec3(gl_GlobalInvocationID.xyz);

	//格納するデータを計算
	vec3 data0 = imageLoad(out_data,grid_ID).xyz;
	vec3 data1 = imageLoad(add_data,grid_ID).xyz;
	
	vec3 f = vec3(0);
	if(pressureflag == 0 && b == 0)
	{
		
		float dens_data = imageLoad(dens,grid_ID).x;
		f = vec3(0.0f,-0.98,0.0f) * dt * step(0.0f,dens_data);
	}
	vec3 out_put = data0 + (data1 + f) * dt;

	//テクスチャに格納
	imageStore(out_data, grid_ID, vec4(out_put,0.0));
	imageStore(add_data, grid_ID, vec4(0.0,0.0,0.0,0.0));
}